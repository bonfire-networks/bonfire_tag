{#case Bonfire.Common.Settings.get([:ui, :show_trending_tags, :disabled], nil, @__context__) != true and
    {Bonfire.Common.Settings.get([:ui, :show_trending_tags, :for_last_x_days], 30, @__context__),
     Bonfire.Common.Settings.get([:ui, :show_trending_tags, :limit], 10, @__context__)}}
  {#match {for_last_x_days, limit}}
    {#case Bonfire.Tag.list_trending(
        for_last_x_days,
        limit
      )}
      {#match trending when is_list(trending)}
        <Bonfire.UI.Common.WidgetBlockLive
          widget_title={@widget_title || l("Trending topics")}
          class={@wrapper_class ||
            "relative w-full mx-auto rounded-xl border border-base-content/10"}
          title_class="flex gap-3 mx-3 py-3 text-base-content/90 pb-2 text-sm font-bold tracking-wide"
        >
          <:action>
            {#if @always_show_reset_btn || Bonfire.Boundaries.can?(@__context__, :tag, :instance_wide)}
              <button
                :on-click="Bonfire.Tag.Web.WidgetTagsLive:reset_trending"
                phx-value-for_last_x_days={for_last_x_days}
                phx-value-limit={limit}
                type="button"
                class="btn-circle btn-xs btn-ghost ml-auto"
                title={l("Reset Trending")}
              >
                <span class="sr-only">{l("Reset Trending")}</span>
                <#Icon iconify="material-symbols-light:refresh" class="w-5 h-5" />
              </button>
            {/if}
          </:action>

          <ul class="menu w-full p-0">
            {#if trending != []}
              {#for %{tag: tag} = tagged <- trending}
                {#if Types.object_type(tag) == Bonfire.Tag.Hashtag or
                    e(tag, :table_id, nil) == "7HASHTAG1SPART0FF01KS0N0MY"}
                  <!-- FIXME ^ should just use Types.object_type -->
                  <li data-role="hashtag" class="rounded-none">
                    <LinkLive class="rounded-none" to={~p"/hashtag/" <> e(tag, :named, :name, "")}>
                      <div class="flex flex-row items-center">
                        <div class="flex flex-col items-start flex-1 gap-0 text-left">
                          <div
                            style="overflow-wrap: anywhere;
                          white-space: inherit;"
                            class="text-sm font-medium truncate line-clamp-1"
                          >
                            #{e(tag, :named, :name, nil)}
                          </div>
                          <div class="text-xs font-light text-base-content/70">{e(tagged, :count, 0)} {lp("activity", "activities", e(tagged, :count, 0))}</div>
                        </div>
                        {!-- <div><#Icon outline="DotsHorizontal" class="w-5 h-5 text-base-content text-opacity-60" /></div> --}
                      </div>
                    </LinkLive>
                  </li>
                {#else}
                  <li data-role="other">
                    <LinkLive class="rounded-none" to={path(tag)}>
                      <div class="flex flex-row items-center">
                        <div class="flex flex-col items-start flex-1 gap-0 text-left">
                          <div
                            style="overflow-wrap: anywhere;
                      white-space: inherit;"
                            class="text-sm font-medium truncate line-clamp-1"
                          >
                            {e(tag, :name, nil) || e(tag, :profile, :name, nil) || e(tag, :character, :username, nil) ||
                              e(tag, :named, :name, nil) || e(tag, :id, nil)}
                          </div>
                          <div class="text-xs font-light text-base-content/70">{e(tagged, :count, 0)} {lp("activity", "activities", e(tagged, :count, 0))}</div>
                        </div>
                      </div>
                    </LinkLive>
                  </li>
                {/if}
              {/for}
            {#else}
              <div class="flex flex-col items-center p-3 space-y-2 place-content-center">
                <img
                  :if={!@__context__[:ui_compact]}
                  src={Config.get([:ui, :theme, :instance_icon], nil)}
                  class="w-12 h-full grayscale"
                />
                <span class="text-sm text-base-content text-opacity-70">{l("Nothing trending at the moment")}</span>
              </div>
            {/if}
          </ul>
        </Bonfire.UI.Common.WidgetBlockLive>
      {#match _}
    {/case}
  {#match _}
{/case}